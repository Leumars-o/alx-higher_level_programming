Test cases for 4-print_square.py
----------------------------------------------

>>> print_square = __import__('4-print_square').print_square

Base Case: 

>>> print_square(4)
####
####
####
####

>>> print_square(0)

case: Negative number

>>> print_square(-4)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

case: pass string

>>> print_square('hello')
Traceback (most recent call last):
    ...
TypeError: size must be an integer

case: pass empty

>>> print_square()
Traceback (most recent call last):
    ...
TypeError: print_square() missing 1 required positional argument: 'size'

case: pass bool

>>> print_square(True)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

case: pass tuple

>>> print_square((4, ))
Traceback (most recent call last):
    ...
TypeError: size must be an integer

case: pass dict

>>> print_square({4})
Traceback (most recent call last):
    ...
TypeError: size must be an integer

case: pass float

>>> print_square(4.0)
Traceback (most recent call last):
    ...
TypeError: size must be an integer
